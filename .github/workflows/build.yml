name: Build EXE (Suite + Converter + Orders)

on:
  workflow_dispatch:
  push:
    paths:
      - main_app.py
      - timesheet_transformer.py
      - SpecialOrders.py
      - assets_logo.py
      - requirements.txt
      - icon.ico
      - .github/workflows/build.yml

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Clean previous build folders
        shell: pwsh
        run: |
          if (Test-Path dist)  { Remove-Item -Recurse -Force dist }
          if (Test-Path build) { Remove-Item -Recurse -Force build }

      - name: Ensure assets_logo.py (generate from RAW logo if missing)
        shell: pwsh
        run: |
          $rawUrl = "https://raw.githubusercontent.com/alekseyvz-dotcom/TimesheetTransformer/main/logo.png"
          if (-not (Test-Path "assets_logo.py")) {
            Write-Host "assets_logo.py not found — generating from RAW URL"
            python - << 'PY'
            import base64, urllib.request, pathlib, sys
            url = "https://raw.githubusercontent.com/alekseyvz-dotcom/TimesheetTransformer/main/logo.png"
            try:
            data = urllib.request.urlopen(url, timeout=10).read()
            b64 = base64.b64encode(data).decode("ascii")
            pathlib.Path("assets_logo.py").write_text('LOGO_BASE64 = """\\\n' + b64 + '\n"""', encoding="utf-8")
            print("assets_logo.py generated")
            except Exception as e:
            print("WARNING: cannot fetch logo:", e)
           # записываем tiny PNG, чтобы не упасть
           tiny = ("LOGO_BASE64 = \"" +
            "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mP8/w8AAn8B9w3G2kIAAAAASUVORK5CYII="
            + "\"\n")
           pathlib.Path("assets_logo.py").write_text(tiny, encoding="utf-8")
           PY
           } else {
            Write-Host "assets_logo.py already exists — keep repository version"
           }

      - name: Build TabelSuite (main menu, windowed)
        shell: pwsh
        run: |
          if (Test-Path "icon.ico") {
            pyinstaller -F -w --clean --hidden-import=tkinter -i icon.ico -n TabelSuite main_app.py
          } else {
            Write-Host "icon.ico not found: building TabelSuite without custom icon"
            pyinstaller -F -w --clean --hidden-import=tkinter -n TabelSuite main_app.py
          }

      - name: Build TabelConverter (converter, windowed)
        shell: pwsh
        run: |
          if (Test-Path "icon2.ico") {
            pyinstaller -F -w --clean --hidden-import=tkinter -i icon2.ico -n TabelConverter timesheet_transformer.py
          } else {
            Write-Host "icon2.ico not found: building TabelConverter without custom icon"
            pyinstaller -F -w --clean --hidden-import=tkinter -n TabelConverter timesheet_transformer.py
          }

      - name: Build SpecialOrders (orders module, windowed)
        shell: pwsh
        run: |
          if (Test-Path "icon2.ico") {
            pyinstaller -F -w --clean --hidden-import=tkinter -i icon2.ico -n SpecialOrders SpecialOrders.py
          } else {
            Write-Host "icon2.ico not found: building SpecialOrders without custom icon"
            pyinstaller -F -w --clean --hidden-import=tkinter -n SpecialOrders SpecialOrders.py
          }

      - name: List dist
        shell: pwsh
        run: Get-ChildItem -Recurse dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: TabelSuite_Pack
          path: |
            dist/TabelSuite.exe
            dist/TabelConverter.exe
            dist/SpecialOrders.exe
          if-no-files-found: error
          retention-days: 14
